package action;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import connectionDB.DBconnection;

/**
 * Servlet implementation class ShainMasterUpdate
 */
@WebServlet("/ShainMasterUpdate")
public class ShainMasterUpdate extends HttpServlet {
	private static final long serialVersionUID = 1L;
    public ShainMasterUpdate() {
        super();
        // TODO Auto-generated constructor stub
    }
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.setContentType("text/html; charset=UTF-8");
		request.setCharacterEncoding("UTF-8");
		
		String shainId = request.getParameter("shainNum");
		String shainId_search = request.getParameter("shainId_search");
		String namae_search = request.getParameter("namae_search");
		String sebetsu_search = request.getParameter("sebetsu_search");
		String sakujo_search = request.getParameter("sakujo_search");
		String conditionVal = request.getParameter("conditionVal");
		System.out.println(shainId);
		/*
		 * 初期表示
		 * 社員ID取得できた場合
		 * 開始
		 * */
		DBconnection con = new DBconnection();
		Connection connection = null;
		PreparedStatement preparedstatement = null;
		ResultSet rs = null;
		if(!"".equals(shainId) && !"null".equals(shainId)){
			String sql = "SELECT emp_id, name, name_kana, name_ini, sex, birth_date, near_station, address, self_pr FROM emp_mas WHERE emp_id = ? AND del_flg = ?";
			try{
				connection = con.connect();
				preparedstatement = connection.prepareStatement(sql);
				preparedstatement.setString(1, shainId);
				preparedstatement.setString(2, "0");
				rs = preparedstatement.executeQuery();
				if(rs.next()){
					request.setAttribute("shainId", rs.getString("emp_id"));
					request.setAttribute("namae", rs.getString("name"));
					request.setAttribute("furigana", rs.getString("name_kana"));
					request.setAttribute("inisharu", rs.getString("name_ini"));
					request.setAttribute("selcect_sex", rs.getString("sex"));
					String[] birthday = rs.getString("birth_date").split("-");
					request.setAttribute("birth_year", birthday[0]);
					request.setAttribute("birth_month", birthday[1]);
					request.setAttribute("birth_day", birthday[2]);
					request.setAttribute("saiyorieki", rs.getString("near_station"));
					request.setAttribute("jusho", rs.getString("address"));
					request.setAttribute("jikopr", rs.getString("self_pr"));
				}else {
					request.setAttribute("notFindMes", "該当の社員情報が更新された可能性があります。再度、社員マスタ検索画面で確認してください。");
				}
			}catch(Exception e){
				request.setAttribute("serverErrorMs", "サーバー処理で例外が発生しました。");
				e.printStackTrace();
			}
			request.setAttribute("shainId_search", shainId_search);
			request.setAttribute("namae_search", namae_search);
			request.setAttribute("sebetsu_search",sebetsu_search);
			request.setAttribute("sakujo_search", sakujo_search);
			RequestDispatcher rd = request.getRequestDispatcher("EmployeeUpdate.jsp");
			rd.forward(request, response);
			return;
		}
		/*
		 * 初期表示
		 * 社員ID取得できた場合
		 * 終了
		 * */
		
		/*
		 * 初期表示
		 * 社員ID取得できない場合
		 * 「戻る」ボタンを押下する場合
		 * 社員マスタ検索画面に戻る
		 * 開始
		 * */
		if("検索画面".equals(conditionVal) || "戻る".equals(conditionVal)){
			request.setAttribute("id", shainId_search);
			request.setAttribute("name", namae_search);
			request.setAttribute("sex", sebetsu_search);
			if ("on".equals(sakujo_search)) {
				request.setAttribute("del", "1");
			}else{
				request.setAttribute("del", sakujo_search);
			}
			request.setAttribute("sakujoButton", "検索");
			RequestDispatcher rd = request.getRequestDispatcher("EmployeeSearch.jsp");
			rd.forward(request, response);
			return;
		}
		/*
		 * 初期表示
		 * 社員ID取得できない場合
		 * 「戻る」ボタンを押下する場合
		 * 社員マスタ検索画面に戻る
		 * 終了
		 * */
		
		
		
		
	}

}
