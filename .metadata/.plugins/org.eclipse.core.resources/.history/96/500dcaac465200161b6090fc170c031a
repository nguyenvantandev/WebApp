package co.jp.myapp.controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import co.jp.myapp.dao.ConnectionDao;
import co.jp.myapp.model.KanjiVal;

/**
 * Servlet implementation class KanjiController
 */
@WebServlet("/KanjiController")
public class KanjiController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public KanjiController() {
        super();
        // TODO Auto-generated constructor stub
    }
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.setContentType("text/html; charset=UTF-8");
		request.setCharacterEncoding("UTF-8");
	
		String actionName = request.getParameter("actionName");
		//String searchVal = request.getParameter("searchVal");
		
		String kanjisearch = request.getParameter("kanjisearch");
		
		String searchOther = request.getParameter("searchOther");
		
		ConnectionDao con = new ConnectionDao();
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		ResultSet rs = null;
		ArrayList<KanjiVal> list = new ArrayList<KanjiVal>();
		ArrayList<String> getlist = new ArrayList<String>();
		/*
		 * 0001 : èâä˙ï\é¶
		 * èâä˙ï\é¶èàóù
		 */
		if("0001".equals(actionName)){
			String sql = "SELECT kanji FROM kanji_list ORDER BY gasui ASC";
			try{
				connection = con.connect();
				preparedStatement= connection.prepareStatement(sql);
				rs = preparedStatement.executeQuery();
				while(rs.next()){
					getlist.add(rs.getString("kanji"));
				}
			}catch(Exception e){
				e.printStackTrace();
			}
			int i = 0;
			while(i<getlist.size()){
				KanjiVal val = new KanjiVal();
				val.setLocal1(getlist.get(i));
				val.setLocal2((1+i<getlist.size())?getlist.get(1+i):"");
				val.setLocal3((2+i<getlist.size())?getlist.get(2+i):"");
				val.setLocal4((3+i<getlist.size())?getlist.get(3+i):"");
				val.setLocal5((4+i<getlist.size())?getlist.get(4+i):"");
				val.setLocal6((5+i<getlist.size())?getlist.get(5+i):"");
				val.setLocal7((6+i<getlist.size())?getlist.get(6+i):"");
				val.setLocal8((7+i<getlist.size())?getlist.get(7+i):"");
				val.setLocal9((8+i<getlist.size())?getlist.get(8+i):"");
				val.setLocal10((9+i<getlist.size())?getlist.get(9+i):"");
				list.add(val);
				i+=10;
			}
			System.out.println(getlist.size());
			System.out.println(list.size());
			request.setAttribute("Valshow", list);
			request.setAttribute("actionVal", "1");
			RequestDispatcher rd = request.getRequestDispatcher("Kanji.jsp");
			rd.forward(request, response);
			return;
		}
		/*
		 * 0002 : äøéöåüçı
		 * äøéöåüçıèàóù
		 */
		if("0002".equals(actionName)){
			String sql;
			if ("ALL".equals(kanjisearch) || "".equals(kanjisearch)){
				sql = "SELECT kanji FROM kanji_list ORDER BY gasui ASC";
			}else{
				sql = "SELECT kanji FROM kanji_list WHERE kanji = ? OR onyomi = ? OR kunyomi = ?";
			}
			try{
				connection = con.connect();
				preparedStatement = connection.prepareStatement(sql);
				if(!"ALL".equals(kanjisearch) && !"".equals(kanjisearch)){
					preparedStatement.setString(1, kanjisearch);
					preparedStatement.setString(2, kanjisearch);
					preparedStatement.setString(3, kanjisearch);
				}
				rs = preparedStatement.executeQuery();
				while(rs.next()){
					getlist.add(rs.getString("kanji"));
				}
			}catch (Exception e){
				e.printStackTrace();
			}
			int i = 0;
			while(i<getlist.size()){
				KanjiVal val = new KanjiVal();
				val.setLocal1(getlist.get(i));
				val.setLocal2((1+i<getlist.size())?getlist.get(1+i):"");
				val.setLocal3((2+i<getlist.size())?getlist.get(2+i):"");
				val.setLocal4((3+i<getlist.size())?getlist.get(3+i):"");
				val.setLocal5((4+i<getlist.size())?getlist.get(4+i):"");
				val.setLocal6((5+i<getlist.size())?getlist.get(5+i):"");
				val.setLocal7((6+i<getlist.size())?getlist.get(6+i):"");
				val.setLocal8((7+i<getlist.size())?getlist.get(7+i):"");
				val.setLocal9((8+i<getlist.size())?getlist.get(8+i):"");
				val.setLocal10((9+i<getlist.size())?getlist.get(9+i):"");
				list.add(val);
				i+=10;
			}
			System.out.println(getlist.size());
			System.out.println(list.size());
			request.setAttribute("Valshow", list);
			request.setAttribute("actionVal", "1");
			RequestDispatcher rd = request.getRequestDispatcher("Kanji.jsp");
			rd.forward(request, response);
			return;
		}
		/*
		 * 0003 : âÊêîåüçı
		 * âÊêîåüçıèàóù
		 */
		if("0003".equals(actionName)){
			System.out.println(kanjisearch);
			String sql = "SELECT kanji FROM kanji_list WHERE gasui = ?";
			try{
				connection = con.connect();
				preparedStatement = connection.prepareStatement(sql);
				preparedStatement.setInt(1, Integer.parseInt(searchOther));
				rs = preparedStatement.executeQuery();
				while(rs.next()){
					getlist.add(rs.getString("kanji"));
					}
			}catch(Exception e){
				e.printStackTrace();
			}
			int i = 0;
			while(i<getlist.size()){
				KanjiVal val = new KanjiVal();
				val.setLocal1(getlist.get(i));
				val.setLocal2((1+i<getlist.size())?getlist.get(1+i):"");
				val.setLocal3((2+i<getlist.size())?getlist.get(2+i):"");
				val.setLocal4((3+i<getlist.size())?getlist.get(3+i):"");
				val.setLocal5((4+i<getlist.size())?getlist.get(4+i):"");
				val.setLocal6((5+i<getlist.size())?getlist.get(5+i):"");
				val.setLocal7((6+i<getlist.size())?getlist.get(6+i):"");
				val.setLocal8((7+i<getlist.size())?getlist.get(7+i):"");
				val.setLocal9((8+i<getlist.size())?getlist.get(8+i):"");
				val.setLocal10((9+i<getlist.size())?getlist.get(9+i):"");
				list.add(val);
				i+=10;
			}
			request.setAttribute("Valshow", list);
			request.setAttribute("actionVal", "1");
			RequestDispatcher rd = request.getRequestDispatcher("Kanji.jsp");
			rd.forward(request, response);
			return;
		}
		/*
		 * 0004 : äøåüÇÃãâ
		 * äøåüÇÃãâÇÃèàóù
		 */
		if("0004".equals(actionName)){
			String sql = "SELECT kanji FROM kanji_list WHERE level = ?";
			try{
				connection = con.connect();
				preparedStatement = connection.prepareStatement(sql);
				preparedStatement.setString(1, searchOther);
				rs = preparedStatement.executeQuery();
				while(rs.next()){
					getlist.add(rs.getString("kanji"));
					}
			}catch(Exception e){
				e.printStackTrace();
			}
			int i = 0;
			while(i<getlist.size()){
				KanjiVal val = new KanjiVal();
				val.setLocal1(getlist.get(i));
				val.setLocal2((1+i<getlist.size())?getlist.get(1+i):"");
				val.setLocal3((2+i<getlist.size())?getlist.get(2+i):"");
				val.setLocal4((3+i<getlist.size())?getlist.get(3+i):"");
				val.setLocal5((4+i<getlist.size())?getlist.get(4+i):"");
				val.setLocal6((5+i<getlist.size())?getlist.get(5+i):"");
				val.setLocal7((6+i<getlist.size())?getlist.get(6+i):"");
				val.setLocal8((7+i<getlist.size())?getlist.get(7+i):"");
				val.setLocal9((8+i<getlist.size())?getlist.get(8+i):"");
				val.setLocal10((9+i<getlist.size())?getlist.get(9+i):"");
				list.add(val);
				i+=10;
			}
			request.setAttribute("Valshow", list);
			request.setAttribute("actionVal", "1");
			RequestDispatcher rd = request.getRequestDispatcher("Kanji.jsp");
			rd.forward(request, response);
			return;
		}
	}
}
